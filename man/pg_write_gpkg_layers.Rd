% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pg_write_gpkg_layers.R
\name{pg_write_gpkg_layers}
\alias{pg_write_gpkg_layers}
\title{Write GeoPackage Layers with Geometry to PostGIS}
\usage{
pg_write_gpkg_layers(
  gpkg,
  conn,
  schema = "public",
  prefix = NULL,
  postfix = NULL,
  geom_colum = "geom",
  snake_case_fields = TRUE
)
}
\arguments{
\item{gpkg}{A string, the path to the GeoPackage file.}

\item{conn}{A PostGIS database connection object created with [RPostgres::dbConnect()].}

\item{schema}{A string, the schema in PostGIS where layers will be stored. Default is `"public"`.}

\item{prefix}{A string, an optional prefix to add to the table names in PostGIS. Default is `NULL`.}

\item{postfix}{A string, an optional postfix to add to the table names in PostGIS. Default is `NULL`.}

\item{geom_colum}{A string, the name of the geometry column to set. Default is `"geom"`.}

\item{snake_case_fields}{A logical, whether to convert field names to Snake Case. Default is `TRUE`.}
}
\value{
Invisibly returns a character vector of the names of the tables written to PostGIS.
}
\description{
Transfers all vector layers with valid geometries from a GeoPackage file
to a specified PostGIS database schema. Optionally allows setting a custom
geometry column name, adding prefixes or postfixes to the table names, and
renaming the layer fields to follow the Snake Case convention.
}
\examples{
\dontrun{
conn <- DBI::dbConnect(RPostgres::Postgres(), dbname = "mydb")
gpkg_file <- "example.gpkg"
pg_write_gpkg_layers(
  gpkg_file, conn, schema = "my_schema", prefix = "pre_", postfix = "_post"
)
DBI::dbDisconnect(conn)
}

}
