[{"path":"https://josesamos.github.io/sigugr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 sigugr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://josesamos.github.io/sigugr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jose Samos. Author, maintainer. Universidad de Granada. Copyright holder.","code":""},{"path":"https://josesamos.github.io/sigugr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Samos J (2024). sigugr: Geospatial Data Processing Integration. R package version 0.1.0, https://josesamos.github.io/sigugr/.","code":"@Manual{,   title = {sigugr: Geospatial Data Processing and Integration},   author = {Jose Samos},   year = {2024},   note = {R package version 0.1.0},   url = {https://josesamos.github.io/sigugr/}, }"},{"path":"https://josesamos.github.io/sigugr/index.html","id":"sigugr","dir":"","previous_headings":"","what":"Geospatial Data Processing and Integration","title":"Geospatial Data Processing and Integration","text":"goal sigugr …","code":""},{"path":"https://josesamos.github.io/sigugr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Geospatial Data Processing and Integration","text":"can install development version sigugr GitHub :","code":"# install.packages(\"pak\") pak::pak(\"josesamos/sigugr\")"},{"path":"https://josesamos.github.io/sigugr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Geospatial Data Processing and Integration","text":"basic example shows solve common problem:","code":"library(sigugr) ## basic example code"},{"path":"https://josesamos.github.io/sigugr/reference/aggregate_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate rasters in a folder — aggregate_raster","title":"Aggregate rasters in a folder — aggregate_raster","text":"Aggregate rasters folder","code":""},{"path":"https://josesamos.github.io/sigugr/reference/aggregate_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate rasters in a folder — aggregate_raster","text":"","code":"aggregate_raster(dir, out_dir, factor = 100)"},{"path":"https://josesamos.github.io/sigugr/reference/aggregate_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate rasters in a folder — aggregate_raster","text":"dir string string vector. out_dir string, output folder. factor integer, aggregation factor.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/aggregate_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate rasters in a folder — aggregate_raster","text":"string vector.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/clip_multipoligon.html","id":null,"dir":"Reference","previous_headings":"","what":"Safe Clip a Multipolygon Vector Layer — clip_multipoligon","title":"Safe Clip a Multipolygon Vector Layer — clip_multipoligon","text":"function clips `MULTIPOLYGON` vector layer using polygon layer, handling specific issues might arise geometries encoded incorrectly containing unknown WKB types. serves fallback `clip_vector()` function fails due errors like `ParseException: Unknown WKB type 12`, associated *MULTIPOLYGON* types.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/clip_multipoligon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safe Clip a Multipolygon Vector Layer — clip_multipoligon","text":"","code":"clip_multipoligon(vector, polygon)"},{"path":"https://josesamos.github.io/sigugr/reference/clip_multipoligon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safe Clip a Multipolygon Vector Layer — clip_multipoligon","text":"vector `sf` multipolygon vector layer clipped. polygon `sf` polygon layer used clipping geometry.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/clip_multipoligon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safe Clip a Multipolygon Vector Layer — clip_multipoligon","text":"`sf` vector layer clipped geometries.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/clip_multipoligon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Safe Clip a Multipolygon Vector Layer — clip_multipoligon","text":"function ensures input layer correctly encoded `MULTIPOLYGON` uses GDAL utilities re-encoding necessary. output projected CRS clipping polygon. solution inspired discussion handling WKB type errors R: <https://gis.stackexchange.com/questions/389814/r-st-centroid-geos-error-unknown-wkb-type-12>.","code":""},{"path":[]},{"path":"https://josesamos.github.io/sigugr/reference/clip_multipoligon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safe Clip a Multipolygon Vector Layer — clip_multipoligon","text":"","code":"gpkg_path <- system.file(\"extdata\", \"clc.gpkg\", package = \"clc\")  clc <- sf::st_read(gpkg_path, layer = \"clc\") #> Error: `dsn` must point to a source, not an empty string. lanjaron <- sf::st_read(gpkg_path, layer = \"lanjaron\") #> Error: `dsn` must point to a source, not an empty string.  clc_clipped <- clip_multipoligon(clc, lanjaron) #> Warning: restarting interrupted promise evaluation #> Error: object 'clc' not found"},{"path":"https://josesamos.github.io/sigugr/reference/clip_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Clip a raster layer based on a polygon — clip_raster","title":"Clip a raster layer based on a polygon — clip_raster","text":"function clips raster layer using polygon, preserving coordinate reference system (CRS) raster.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/clip_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clip a raster layer based on a polygon — clip_raster","text":"","code":"clip_raster(raster, polygon)"},{"path":"https://josesamos.github.io/sigugr/reference/clip_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clip a raster layer based on a polygon — clip_raster","text":"raster `terra` raster layer clipped. polygon `sf` polygon layer used clipping.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/clip_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clip a raster layer based on a polygon — clip_raster","text":"`terra` raster layer clipped extent polygon.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/clip_raster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clip a raster layer based on a polygon — clip_raster","text":"function first transforms polygon match CRS raster, crops raster extent polygon. Finally, applies mask retain areas within polygon.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/clip_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clip a raster layer based on a polygon — clip_raster","text":"","code":"library(terra) #> terra 1.8.5 library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE r <- rast(system.file(\"ex/logo.tif\", package=\"terra\")) p <- st_as_sf(st_sfc(st_polygon(list(rbind(c(5, 5), c(5, 60), c(60, 60), c(60, 5), c(5, 5)))), crs = st_crs(r))) result <- clip_raster(r, p) #> Warning: GDAL Error 6: Cannot find coordinate operations from `ENGCRS[\"Cartesian (Meter)\",EDATUM[\"\"],CS[Cartesian,2],AXIS[\"(E)\",east,ORDER[1],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]],AXIS[\"(N)\",north,ORDER[2],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]]' to `ENGCRS[\"Cartesian (Meter)\",EDATUM[\"\"],CS[Cartesian,2],AXIS[\"(E)\",east,ORDER[1],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]],AXIS[\"(N)\",north,ORDER[2],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]]' #> Error in value[[3L]](cond): Error during raster clipping: OGRCreateCoordinateTransformation(): transformation not available plot(result) #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'plot': object 'result' not found"},{"path":"https://josesamos.github.io/sigugr/reference/clip_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Clip a Vector Layer with a Polygon — clip_vector","title":"Clip a Vector Layer with a Polygon — clip_vector","text":"function clips vector layer (e.g., points, lines, polygons) using polygon layer. handles CRS (Coordinate Reference System) transformations automatically necessary, ensuring output CRS input polygon.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/clip_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clip a Vector Layer with a Polygon — clip_vector","text":"","code":"clip_vector(vector, polygon)"},{"path":"https://josesamos.github.io/sigugr/reference/clip_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clip a Vector Layer with a Polygon — clip_vector","text":"vector `sf` object representing vector layer clipped. polygon `sf` object representing polygon layer used clipping.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/clip_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clip a Vector Layer with a Polygon — clip_vector","text":"`sf` object containing features input `vector` intersect `polygon`. output CRS `polygon`, retain attributes input `vector`.","code":""},{"path":[]},{"path":"https://josesamos.github.io/sigugr/reference/clip_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clip a Vector Layer with a Polygon — clip_vector","text":"","code":"gpkg_path <- system.file(\"extdata\", \"clc.gpkg\", package = \"clc\")  clc <- sf::st_read(gpkg_path, layer = \"clc\") #> Error: `dsn` must point to a source, not an empty string. lanjaron <- sf::st_read(gpkg_path, layer = \"lanjaron\") #> Error: `dsn` must point to a source, not an empty string.  clc_clipped <- clip_vector(clc, lanjaron) #> Error: object 'lanjaron' not found"},{"path":"https://josesamos.github.io/sigugr/reference/compose_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Compose a raster layer from multiple files — compose_raster","title":"Compose a raster layer from multiple files — compose_raster","text":"folder name vector folder names contain files indicated.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/compose_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compose a raster layer from multiple files — compose_raster","text":"","code":"compose_raster(dir, out_file = NULL)"},{"path":"https://josesamos.github.io/sigugr/reference/compose_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compose a raster layer from multiple files — compose_raster","text":"dir string string vector, folder names. out_file string, output file name (without extension).","code":""},{"path":"https://josesamos.github.io/sigugr/reference/compose_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compose a raster layer from multiple files — compose_raster","text":"`terra` raster layer.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/compose_raster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compose a raster layer from multiple files — compose_raster","text":"can also indicate name (path without extension) virtual raster file; none indicated, temporary one used.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/compose_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compose a raster layer from multiple files — compose_raster","text":"","code":"#"},{"path":"https://josesamos.github.io/sigugr/reference/copy_styles_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy Layer Styles from Source to Destination — copy_styles_layer","title":"Copy Layer Styles from Source to Destination — copy_styles_layer","text":"Copies first style definition source (either GeoPackage file PostGIS connection) assigns layers destination GeoPackage.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/copy_styles_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy Layer Styles from Source to Destination — copy_styles_layer","text":"","code":"copy_styles_layer(from, to)"},{"path":"https://josesamos.github.io/sigugr/reference/copy_styles_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy Layer Styles from Source to Destination — copy_styles_layer","text":"data origin. can : - string representing path GeoPackage file. - `DBI` database connection object PostGIS database, created using [RPostgres::dbConnect()]. string representing path destination GeoPackage file.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/copy_styles_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy Layer Styles from Source to Destination — copy_styles_layer","text":"updated `layer_styles` table, returned invisibly.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/copy_styles_layer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Copy Layer Styles from Source to Destination — copy_styles_layer","text":"function reads first style `layer_styles` table source GeoPackage PostGIS database. style applied layers destination GeoPackage.","code":""},{"path":[]},{"path":"https://josesamos.github.io/sigugr/reference/copy_styles_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy Layer Styles from Source to Destination — copy_styles_layer","text":"","code":"if (FALSE) { # \\dontrun{ source_gpkg <- \"source.gpkg\" dest_gpkg <- \"destination.gpkg\"  copy_styles_layer(from = source_gpkg, to = dest_gpkg) } # }"},{"path":"https://josesamos.github.io/sigugr/reference/copy_styles_layer_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy Styles to Specific Layers in a PostGIS Database — copy_styles_layer_names","title":"Copy Styles to Specific Layers in a PostGIS Database — copy_styles_layer_names","text":"Copies first style definition source (either GeoPackage file PostGIS connection) specified layers PostGIS database.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/copy_styles_layer_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy Styles to Specific Layers in a PostGIS Database — copy_styles_layer_names","text":"","code":"copy_styles_layer_names(from, to, layers, database, schema = \"public\")"},{"path":"https://josesamos.github.io/sigugr/reference/copy_styles_layer_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy Styles to Specific Layers in a PostGIS Database — copy_styles_layer_names","text":"data origin. can : - string representing path GeoPackage file. - `DBI` database connection object PostGIS database, created using [RPostgres::dbConnect()]. database connection object destination PostGIS database (e.g., `RPostgres::dbConnect`). layers character vector layer names destination database style applied. database string specifying name PostGIS database. schema string specifying schema PostGIS database layers reside. Default `\"public\"`.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/copy_styles_layer_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy Styles to Specific Layers in a PostGIS Database — copy_styles_layer_names","text":"updated style object (`obj`), returned invisibly.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/copy_styles_layer_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Copy Styles to Specific Layers in a PostGIS Database — copy_styles_layer_names","text":"function reads first style `layer_styles` table source applies specified layers destination PostGIS database.","code":""},{"path":[]},{"path":"https://josesamos.github.io/sigugr/reference/copy_styles_layer_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy Styles to Specific Layers in a PostGIS Database — copy_styles_layer_names","text":"","code":"if (FALSE) { # \\dontrun{ source_gpkg <- \"source.gpkg\" conn <- DBI::dbConnect(   RPostgres::Postgres(),   dbname = \"mydb\",   host = \"localhost\",   user = \"user\",   password = \"password\" )  layers_to_style <- c(\"layer1\", \"layer2\")  copy_styles_layer_names(   from = source_gpkg,   to = conn,   layers = layers_to_style,   database = \"mydb\",   schema = \"public\" )  DBI::dbDisconnect(conn) } # }"},{"path":"https://josesamos.github.io/sigugr/reference/get_layer_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Layer Categories Based on Raster Values — get_layer_categories","title":"Get Layer Categories Based on Raster Values — get_layer_categories","text":"Extracts categories (IDs, descriptions, colors) first style definition stored GeoPackage PostGIS database. extracted categories filtered include present raster values.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/get_layer_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Layer Categories Based on Raster Values — get_layer_categories","text":"","code":"get_layer_categories(from, r_clc)"},{"path":"https://josesamos.github.io/sigugr/reference/get_layer_categories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Layer Categories Based on Raster Values — get_layer_categories","text":"data origin. can : - string representing path GeoPackage file. - `DBI` database connection object PostGIS database, created using [RPostgres::dbConnect()]. r_clc `terra` raster object containing raster values filter categories.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/get_layer_categories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Layer Categories Based on Raster Values — get_layer_categories","text":"data frame containing filtered categories following columns:   - `id`: category ID (integer).   - `description`: description category (character).   - `color`: color associated category hexadecimal format (character).","code":""},{"path":"https://josesamos.github.io/sigugr/reference/get_layer_categories.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Layer Categories Based on Raster Values — get_layer_categories","text":"function retrieves style definitions `layer_styles` table provided GeoPackage PostGIS database. filters categories include whose IDs match unique values present raster. function useful associating raster values corresponding descriptions colors, typically visualization analysis tasks.","code":""},{"path":[]},{"path":"https://josesamos.github.io/sigugr/reference/get_layer_categories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Layer Categories Based on Raster Values — get_layer_categories","text":"","code":"if (FALSE) { # \\dontrun{ gpkg_path <- system.file(\"extdata\", \"clc.gpkg\", package = \"clc\") r_clc <- terra::rast(\"clc_raster.tif\")  categories <- get_layer_categories(from = gpkg_path, r_clc = r_clc) } # }"},{"path":"https://josesamos.github.io/sigugr/reference/get_nexus.html","id":null,"dir":"Reference","previous_headings":"","what":"Get nexus — get_nexus","title":"Get nexus — get_nexus","text":"Given name, ends \"/\" nexus empty string, otherwise \"/\".","code":""},{"path":"https://josesamos.github.io/sigugr/reference/get_nexus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get nexus — get_nexus","text":"","code":"get_nexus(name)"},{"path":"https://josesamos.github.io/sigugr/reference/get_nexus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get nexus — get_nexus","text":"name string.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/get_nexus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get nexus — get_nexus","text":"string.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/pg_write_bands.html","id":null,"dir":"Reference","previous_headings":"","what":"Save raster bands in separate tables in PostGIS — pg_write_bands","title":"Save raster bands in separate tables in PostGIS — pg_write_bands","text":"Save raster bands separate tables PostGIS","code":""},{"path":"https://josesamos.github.io/sigugr/reference/pg_write_bands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save raster bands in separate tables in PostGIS — pg_write_bands","text":"","code":"pg_write_bands(sr, conn, prefix = NULL, postfix = NULL)"},{"path":"https://josesamos.github.io/sigugr/reference/pg_write_bands.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save raster bands in separate tables in PostGIS — pg_write_bands","text":"sr `SpatRaster` object. conn connection PostGIS database. prefix string, table name prefix band name. postfix string, table name postfix band name.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/pg_write_bands.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save raster bands in separate tables in PostGIS — pg_write_bands","text":"`SpatRaster` object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/sigugr/reference/pg_write_bands.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save raster bands in separate tables in PostGIS — pg_write_bands","text":"","code":"#"},{"path":"https://josesamos.github.io/sigugr/reference/pg_write_raster_file_bands.html","id":null,"dir":"Reference","previous_headings":"","what":"Save raster file bands in separate tables in PostGIS — pg_write_raster_file_bands","title":"Save raster file bands in separate tables in PostGIS — pg_write_raster_file_bands","text":"Save raster file bands separate tables PostGIS","code":""},{"path":"https://josesamos.github.io/sigugr/reference/pg_write_raster_file_bands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save raster file bands in separate tables in PostGIS — pg_write_raster_file_bands","text":"","code":"pg_write_raster_file_bands(file, conn, prefix = NULL, postfix = NULL)"},{"path":"https://josesamos.github.io/sigugr/reference/pg_write_raster_file_bands.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save raster file bands in separate tables in PostGIS — pg_write_raster_file_bands","text":"file string vector, raster file names. conn connection PostGIS database. prefix string, table name prefix band name. postfix string, table name postfix band name.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/pg_write_raster_file_bands.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save raster file bands in separate tables in PostGIS — pg_write_raster_file_bands","text":"string vector, raster file names.","code":""},{"path":[]},{"path":"https://josesamos.github.io/sigugr/reference/pg_write_raster_file_bands.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save raster file bands in separate tables in PostGIS — pg_write_raster_file_bands","text":"","code":"#"},{"path":"https://josesamos.github.io/sigugr/reference/pg_write_satres_bands.html","id":null,"dir":"Reference","previous_headings":"","what":"Save `satres` bands in separate tables in PostGIS — pg_write_satres_bands","title":"Save `satres` bands in separate tables in PostGIS — pg_write_satres_bands","text":"Save `satres` bands separate tables PostGIS","code":""},{"path":"https://josesamos.github.io/sigugr/reference/pg_write_satres_bands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save `satres` bands in separate tables in PostGIS — pg_write_satres_bands","text":"","code":"pg_write_satres_bands(sr, conn, prefix = NULL, postfix = NULL)"},{"path":"https://josesamos.github.io/sigugr/reference/pg_write_satres_bands.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save `satres` bands in separate tables in PostGIS — pg_write_satres_bands","text":"sr `satres` object. conn connection PostGIS database. prefix string, table name prefix resolution names. postfix string, table name postfix resolution names.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/pg_write_satres_bands.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save `satres` bands in separate tables in PostGIS — pg_write_satres_bands","text":"`satres` object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/sigugr/reference/pg_write_satres_bands.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save `satres` bands in separate tables in PostGIS — pg_write_satres_bands","text":"","code":"#"},{"path":"https://josesamos.github.io/sigugr/reference/satres_minmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Get minmax — satres_minmax","title":"Get minmax — satres_minmax","text":"Get minmax values vector form check .","code":""},{"path":"https://josesamos.github.io/sigugr/reference/satres_minmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get minmax — satres_minmax","text":"","code":"satres_minmax(sr)"},{"path":"https://josesamos.github.io/sigugr/reference/satres_minmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get minmax — satres_minmax","text":"sr `satres` object.","code":""},{"path":"https://josesamos.github.io/sigugr/reference/satres_minmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get minmax — satres_minmax","text":"string vector.","code":""},{"path":"https://josesamos.github.io/sigugr/news/index.html","id":"sigugr-010","dir":"Changelog","previous_headings":"","what":"sigugr 0.1.0","title":"sigugr 0.1.0","text":"Initial functionality.","code":""}]
